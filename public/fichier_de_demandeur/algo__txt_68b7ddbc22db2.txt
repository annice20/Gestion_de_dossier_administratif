Quicksort(tri rapide) ==tri d'un tableau algorithme sans récursion
    exemple1:partition(T,inf, sup);
    	    x = T[sup] 
            i = inf - 1; j= inf;
            tant que (j<= sup - 1)
	(fsi)    si (T[j] >x)j=j+1
		sinon echanger(T[i+1];T[j])
		  i=i+1; j=j+1;
        (ftq) echanger T[i+1] et T[sup],
 		return i+1;
    exemple2: Trirapide(T,inf,sup)
          	si (inf<sup)
		q= partition(T, inf,sup)
		Trirapide(T,inf,q-1);
		Trirapide(T,q+1,sup);
    exemple3: TriRapideIter(T,inf,sup)
		empile(p, inf)
		empile(p,sup)
		tant que( !est-pile-vide(p) )
		//récupérer le traitement
		sup= dépiler(p)
		inf= dépiler(p)
			si(inf<sup)
			q=partition(T,inf,sup)
			empiler(p,q+1)
			empiler(p,sup)
			
			empiler(p,inf)
			empiler(p,q-1)
    exemple4: #taille 10
		int p[taille]= {0};
		int sommet=0;
		int est-vide(int*p){
			if (sommet==0){    //équivaut à sommet == 0?1:0
				return 1;
			else return 0;
		}
		void empiler(int*p, int elt-ajout){
			p[sommet] = elt-ajout;
			sommet = sommet+1;
		}
		int depiler(int*p){
		  sommet = sommet-1
		  int res = p[sommet]
		   return res;
		}